name: Common CI for Nodes
on:
  workflow_call:
    inputs:
      # Required parameters
      node-version:
        description: 'node version to use'
        required: true
        type: string
      extra-commands:
        description: 'Extra setup commands or checks to run before running tests'
        required: false
        type: string
      app-directory:
        description: 'Application subdirectory to run the tests in'
        required: false
        type: string
        default: '.'
      typecheck:
        description: 'Set to true to run type checking'
        required: false
        type: boolean
        default: false
  workflow_dispatch:

jobs:
  commitlint:
    name: Check commit messages
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Run commitlint
        uses: wagoid/commitlint-github-action@3d28780bbf0365e29b144e272b2121204d5be5f3  # v6.1.2

  tests:
    name: Test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ inputs.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ inputs.node-version }}
        cache: 'yarn'
    - name: Check Yarn version and install dependencies
      working-directory: ${{ inputs.app-directory }}
      run: |
        YARN_VERSION=$(yarn --version)
        MAJOR_VERSION=$(echo $YARN_VERSION | cut -d. -f1)
        if [ "$MAJOR_VERSION" -ge "4" ]; then
          echo "Using Yarn $YARN_VERSION - using modern flags"
          yarn install --immutable --inline-builds
        else
          echo "Using Yarn $YARN_VERSION - using legacy flags"
          yarn --prefer-offline
        fi
    - name: Run extra commands
      if: ${{ inputs.extra-commands != ''}}
      run: ${{ inputs.extra-commands }}
    - name: Run tests
      working-directory: ${{ inputs.app-directory }}
      run: yarn test:coverage
      env:
        CI: true

    - name: SonarQube Cloud Scan
      uses: SonarSource/sonarqube-scan-action@v6
      with:
        projectBaseDir: ${{ inputs.app-directory }}
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        