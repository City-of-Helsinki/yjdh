# Generated by Django 3.2.4 on 2021-10-07 11:11

import uuid

import django.db.models.deletion
import encrypted_fields.fields
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("companies", "0002_unique_company_business_id"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("applications", "0023_move_benefit_amount_to_calculation"),
    ]

    operations = [
        migrations.CreateModel(
            name="Calculation",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="time created"
                    ),
                ),
                (
                    "modified_at",
                    models.DateTimeField(auto_now=True, verbose_name="time modified"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "monthly_pay",
                    models.DecimalField(
                        decimal_places=2, max_digits=7, verbose_name="monthly pay"
                    ),
                ),
                (
                    "vacation_money",
                    models.DecimalField(
                        decimal_places=2, max_digits=7, verbose_name="vacation money"
                    ),
                ),
                (
                    "other_expenses",
                    models.DecimalField(
                        decimal_places=2, max_digits=7, verbose_name="other expenses"
                    ),
                ),
                (
                    "start_date",
                    models.DateField(verbose_name="benefit start from date"),
                ),
                ("end_date", models.DateField(verbose_name="benefit end date")),
                (
                    "state_aid_max_percentage",
                    models.IntegerField(
                        choices=[(50, "50%"), (100, "100%")],
                        verbose_name="State aid maximum %",
                    ),
                ),
                (
                    "calculated_benefit_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=7,
                        null=True,
                        verbose_name="amount of the benefit granted, calculated by the system",
                    ),
                ),
                (
                    "override_benefit_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=7,
                        null=True,
                        verbose_name="amount of the benefit manually entered by the application handler",
                    ),
                ),
                (
                    "override_benefit_amount_comment",
                    models.CharField(
                        max_length=256,
                        verbose_name="reason for overriding the calculated benefit amount",
                    ),
                ),
                (
                    "application",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="calculation",
                        to="applications.application",
                        verbose_name="calculation",
                    ),
                ),
            ],
            options={
                "verbose_name": "calculation",
                "verbose_name_plural": "calculations",
                "db_table": "bf_calculator_calculation",
                "ordering": ("created_at",),
            },
        ),
        migrations.CreateModel(
            name="PreviousBenefit",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="time created"
                    ),
                ),
                (
                    "modified_at",
                    models.DateTimeField(auto_now=True, verbose_name="time modified"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "encrypted_social_security_number",
                    encrypted_fields.fields.EncryptedCharField(
                        max_length=11, verbose_name="encrypted social security number"
                    ),
                ),
                (
                    "social_security_number",
                    encrypted_fields.fields.SearchField(
                        blank=True,
                        db_index=True,
                        encrypted_field_name="encrypted_social_security_number",
                        hash_key="d5c8a2743d726a33dbd637fac39d6f0712dcee4af36142fb4fb15afa17b1d9bf",
                        max_length=66,
                        null=True,
                        verbose_name="social security number",
                    ),
                ),
                (
                    "start_date",
                    models.DateField(verbose_name="benefit start from date"),
                ),
                ("end_date", models.DateField(verbose_name="benefit end date")),
                (
                    "monthly_amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=7,
                        verbose_name="monthly amount of the previous benefit",
                    ),
                ),
                (
                    "total_amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=7,
                        verbose_name="total amount of the previous benefit",
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="previous_benefits",
                        to="companies.company",
                        verbose_name="company",
                    ),
                ),
            ],
            options={
                "verbose_name": "Previously granted benefit",
                "verbose_name_plural": "Previously granted benefits",
                "db_table": "bf_calculator_previousbenefit",
            },
        ),
        migrations.CreateModel(
            name="PaySubsidy",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="time created"
                    ),
                ),
                (
                    "modified_at",
                    models.DateTimeField(auto_now=True, verbose_name="time modified"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("start_date", models.DateField(verbose_name="Pay subsidy start date")),
                ("end_date", models.DateField(verbose_name="Pay subsidy end date")),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=7,
                        verbose_name="amount of the pay subsidy",
                    ),
                ),
                (
                    "application",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pay_subsidies",
                        to="applications.application",
                        verbose_name="application",
                    ),
                ),
            ],
            options={
                "verbose_name": "pay subsidy",
                "verbose_name_plural": "pay subsidies",
                "db_table": "bf_calculator_paysubsidy",
                "ordering": ["application__created_at", "start_date"],
            },
        ),
        migrations.CreateModel(
            name="HistoricalPreviousBenefit",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="time created"
                    ),
                ),
                (
                    "modified_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="time modified"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "encrypted_social_security_number",
                    encrypted_fields.fields.EncryptedCharField(
                        max_length=11, verbose_name="encrypted social security number"
                    ),
                ),
                (
                    "social_security_number",
                    encrypted_fields.fields.SearchField(
                        blank=True,
                        db_index=True,
                        encrypted_field_name="encrypted_social_security_number",
                        hash_key="d5c8a2743d726a33dbd637fac39d6f0712dcee4af36142fb4fb15afa17b1d9bf",
                        max_length=66,
                        null=True,
                        verbose_name="social security number",
                    ),
                ),
                (
                    "start_date",
                    models.DateField(verbose_name="benefit start from date"),
                ),
                ("end_date", models.DateField(verbose_name="benefit end date")),
                (
                    "monthly_amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=7,
                        verbose_name="monthly amount of the previous benefit",
                    ),
                ),
                (
                    "total_amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=7,
                        verbose_name="total amount of the previous benefit",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="companies.company",
                        verbose_name="company",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical Previously granted benefit",
                "db_table": "bf_calculator_previousbenefit_history",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalPaySubsidy",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="time created"
                    ),
                ),
                (
                    "modified_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="time modified"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                ("start_date", models.DateField(verbose_name="Pay subsidy start date")),
                ("end_date", models.DateField(verbose_name="Pay subsidy end date")),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=7,
                        verbose_name="amount of the pay subsidy",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "application",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="applications.application",
                        verbose_name="application",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical pay subsidy",
                "db_table": "bf_calculator_paysubsidy_history",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalCalculationRow",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="time created"
                    ),
                ),
                (
                    "modified_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="time modified"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "row_type",
                    models.CharField(
                        choices=[
                            ("salary_costs", "Salary costs"),
                            ("state_aid_max_percent", "State aid maximum %"),
                            ("pay_subsidy_monthly_eur", "Pay subsidy/month"),
                            (
                                "helsinki_benefit_monthly_eur",
                                "Helsinki benefit amount monthly",
                            ),
                            (
                                "helsinki_benefit_total_eur",
                                "Helsinki benefit total amount",
                            ),
                        ],
                        max_length=64,
                    ),
                ),
                ("ordering", models.IntegerField(default=0)),
                (
                    "description_fi",
                    models.CharField(
                        max_length=256,
                        verbose_name="Description of the row to be shown in handler UI",
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2, max_digits=7, verbose_name="row amount"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "calculation",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="calculator.calculation",
                        verbose_name="calculation",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical calculation row",
                "db_table": "bf_calculator_calculationrow_history",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalCalculation",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="time created"
                    ),
                ),
                (
                    "modified_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="time modified"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "monthly_pay",
                    models.DecimalField(
                        decimal_places=2, max_digits=7, verbose_name="monthly pay"
                    ),
                ),
                (
                    "vacation_money",
                    models.DecimalField(
                        decimal_places=2, max_digits=7, verbose_name="vacation money"
                    ),
                ),
                (
                    "other_expenses",
                    models.DecimalField(
                        decimal_places=2, max_digits=7, verbose_name="other expenses"
                    ),
                ),
                (
                    "start_date",
                    models.DateField(verbose_name="benefit start from date"),
                ),
                ("end_date", models.DateField(verbose_name="benefit end date")),
                (
                    "state_aid_max_percentage",
                    models.IntegerField(
                        choices=[(50, "50%"), (100, "100%")],
                        verbose_name="State aid maximum %",
                    ),
                ),
                (
                    "calculated_benefit_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=7,
                        null=True,
                        verbose_name="amount of the benefit granted, calculated by the system",
                    ),
                ),
                (
                    "override_benefit_amount",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=7,
                        null=True,
                        verbose_name="amount of the benefit manually entered by the application handler",
                    ),
                ),
                (
                    "override_benefit_amount_comment",
                    models.CharField(
                        max_length=256,
                        verbose_name="reason for overriding the calculated benefit amount",
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "application",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="applications.application",
                        verbose_name="calculation",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical calculation",
                "db_table": "bf_calculator_calculator_history",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="CalculationRow",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="time created"
                    ),
                ),
                (
                    "modified_at",
                    models.DateTimeField(auto_now=True, verbose_name="time modified"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "row_type",
                    models.CharField(
                        choices=[
                            ("salary_costs", "Salary costs"),
                            ("state_aid_max_percent", "State aid maximum %"),
                            ("pay_subsidy_monthly_eur", "Pay subsidy/month"),
                            (
                                "helsinki_benefit_monthly_eur",
                                "Helsinki benefit amount monthly",
                            ),
                            (
                                "helsinki_benefit_total_eur",
                                "Helsinki benefit total amount",
                            ),
                        ],
                        max_length=64,
                    ),
                ),
                ("ordering", models.IntegerField(default=0)),
                (
                    "description_fi",
                    models.CharField(
                        max_length=256,
                        verbose_name="Description of the row to be shown in handler UI",
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2, max_digits=7, verbose_name="row amount"
                    ),
                ),
                (
                    "calculation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rows",
                        to="calculator.calculation",
                        verbose_name="calculation",
                    ),
                ),
            ],
            options={
                "verbose_name": "calculation row",
                "verbose_name_plural": "calculation rows",
                "db_table": "bf_calculator_calculationrow",
                "ordering": ["calculation__created_at", "ordering"],
                "unique_together": {("calculation", "ordering")},
            },
        ),
    ]
