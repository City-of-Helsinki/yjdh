# Generated by Django 3.2 on 2021-06-14 06:22

import uuid

import django.db.models.deletion
import localflavor.generic.models
import simple_history.models
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("companies", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Application",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="time created"
                    ),
                ),
                (
                    "modified_at",
                    models.DateTimeField(auto_now=True, verbose_name="time modified"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("received", "Received"),
                            (
                                "additional_information_needed",
                                "Additional information requested",
                            ),
                            ("cancelled", "Cancelled"),
                            ("accepted", "Accepted"),
                            ("rejected", "Rejected"),
                        ],
                        default="draft",
                        max_length=64,
                        verbose_name="status",
                    ),
                ),
                (
                    "company_name",
                    models.CharField(max_length=256, verbose_name="company name"),
                ),
                (
                    "company_form",
                    models.CharField(max_length=64, verbose_name="company form"),
                ),
                (
                    "official_company_street_address",
                    models.CharField(
                        max_length=256, verbose_name="company street address"
                    ),
                ),
                (
                    "official_company_city",
                    models.CharField(max_length=256, verbose_name="company city"),
                ),
                (
                    "official_company_postcode",
                    models.CharField(max_length=256, verbose_name="company post code"),
                ),
                ("use_alternative_address", models.BooleanField()),
                (
                    "alternative_company_street_address",
                    models.CharField(
                        max_length=256, verbose_name="company street address"
                    ),
                ),
                (
                    "alternative_company_city",
                    models.CharField(max_length=256, verbose_name="company city"),
                ),
                (
                    "alternative_company_postcode",
                    models.CharField(max_length=256, verbose_name="company post code"),
                ),
                (
                    "company_bank_account_number",
                    localflavor.generic.models.IBANField(
                        include_countries=("FI",),
                        max_length=34,
                        use_nordea_extensions=False,
                        verbose_name="company bank account number",
                    ),
                ),
                (
                    "company_contact_person_phone_number",
                    models.CharField(
                        max_length=64,
                        verbose_name="company contact person's phone number",
                    ),
                ),
                (
                    "company_contact_person_email",
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        verbose_name="company contact person's email",
                    ),
                ),
                ("association_has_business_activities", models.BooleanField(null=True)),
                (
                    "applicant_language",
                    models.CharField(
                        choices=[("fi", "suomi"), ("sv", "svenska"), ("en", "english")],
                        default="fi",
                        max_length=2,
                    ),
                ),
                ("co_operation_negotiations", models.BooleanField(null=True)),
                (
                    "co_operation_negotiations_description",
                    models.CharField(
                        max_length=256,
                        verbose_name="additional information about the ongoing co-operation negotiations",
                    ),
                ),
                ("apprenticeship_program", models.BooleanField(null=True)),
                ("archived", models.BooleanField()),
                (
                    "benefit_type",
                    models.CharField(
                        choices=[
                            ("employment_benefit", "Employment Benefit"),
                            ("salary_benefit", "Salary Benefit"),
                            ("commission_benefit", "Commission Benefit"),
                        ],
                        max_length=64,
                    ),
                ),
                (
                    "start_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="benefit start from date"
                    ),
                ),
                (
                    "end_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="benefit end date"
                    ),
                ),
                ("de_minimis_aid", models.BooleanField(null=True)),
            ],
            options={
                "verbose_name": "application",
                "verbose_name_plural": "applications",
                "db_table": "bf_applications_application",
            },
        ),
        migrations.CreateModel(
            name="ApplicationBasis",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="time created"
                    ),
                ),
                (
                    "modified_at",
                    models.DateTimeField(auto_now=True, verbose_name="time modified"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("identifier", models.CharField(max_length=64, unique=True)),
            ],
            options={
                "verbose_name": "application basis",
                "verbose_name_plural": "application bases",
                "db_table": "bf_applications_applicationbasis",
            },
        ),
        migrations.CreateModel(
            name="HistoricalDeMinimisAid",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="time created"
                    ),
                ),
                (
                    "modified_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="time modified"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "granter",
                    models.CharField(
                        max_length=64, verbose_name="granter of the de minimis aid"
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=8,
                        verbose_name="amount of the de minimis aid",
                    ),
                ),
                (
                    "granted_at",
                    models.DateField(
                        blank=True, null=True, verbose_name="benefit granted at"
                    ),
                ),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "application",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="applications.application",
                        verbose_name="application",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical de minimis aid",
                "db_table": "applications_deminimisaid_history",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalApplicationLogEntry",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="time created"
                    ),
                ),
                (
                    "modified_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="time modified"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "from_status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("received", "Received"),
                            (
                                "additional_information_needed",
                                "Additional information requested",
                            ),
                            ("cancelled", "Cancelled"),
                            ("accepted", "Accepted"),
                            ("rejected", "Rejected"),
                        ],
                        max_length=64,
                    ),
                ),
                (
                    "to_status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("received", "Received"),
                            (
                                "additional_information_needed",
                                "Additional information requested",
                            ),
                            ("cancelled", "Cancelled"),
                            ("accepted", "Accepted"),
                            ("rejected", "Rejected"),
                        ],
                        max_length=64,
                    ),
                ),
                ("comment", models.TextField(blank=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "application",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="applications.application",
                        verbose_name="application",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical application log entry",
                "db_table": "bf_applications_applicationlogentry_history",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalApplicationBasis",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="time created"
                    ),
                ),
                (
                    "modified_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="time modified"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                ("identifier", models.CharField(db_index=True, max_length=64)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical application basis",
                "db_table": "bf_applications_applicationbasis_history",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="HistoricalApplication",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="time created"
                    ),
                ),
                (
                    "modified_at",
                    models.DateTimeField(
                        blank=True, editable=False, verbose_name="time modified"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(db_index=True, default=uuid.uuid4, editable=False),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("received", "Received"),
                            (
                                "additional_information_needed",
                                "Additional information requested",
                            ),
                            ("cancelled", "Cancelled"),
                            ("accepted", "Accepted"),
                            ("rejected", "Rejected"),
                        ],
                        default="draft",
                        max_length=64,
                        verbose_name="status",
                    ),
                ),
                (
                    "company_name",
                    models.CharField(max_length=256, verbose_name="company name"),
                ),
                (
                    "company_form",
                    models.CharField(max_length=64, verbose_name="company form"),
                ),
                (
                    "official_company_street_address",
                    models.CharField(
                        max_length=256, verbose_name="company street address"
                    ),
                ),
                (
                    "official_company_city",
                    models.CharField(max_length=256, verbose_name="company city"),
                ),
                (
                    "official_company_postcode",
                    models.CharField(max_length=256, verbose_name="company post code"),
                ),
                ("use_alternative_address", models.BooleanField()),
                (
                    "alternative_company_street_address",
                    models.CharField(
                        max_length=256, verbose_name="company street address"
                    ),
                ),
                (
                    "alternative_company_city",
                    models.CharField(max_length=256, verbose_name="company city"),
                ),
                (
                    "alternative_company_postcode",
                    models.CharField(max_length=256, verbose_name="company post code"),
                ),
                (
                    "company_bank_account_number",
                    localflavor.generic.models.IBANField(
                        include_countries=("FI",),
                        max_length=34,
                        use_nordea_extensions=False,
                        verbose_name="company bank account number",
                    ),
                ),
                (
                    "company_contact_person_phone_number",
                    models.CharField(
                        max_length=64,
                        verbose_name="company contact person's phone number",
                    ),
                ),
                (
                    "company_contact_person_email",
                    models.EmailField(
                        blank=True,
                        max_length=254,
                        verbose_name="company contact person's email",
                    ),
                ),
                ("association_has_business_activities", models.BooleanField(null=True)),
                (
                    "applicant_language",
                    models.CharField(
                        choices=[("fi", "suomi"), ("sv", "svenska"), ("en", "english")],
                        default="fi",
                        max_length=2,
                    ),
                ),
                ("co_operation_negotiations", models.BooleanField(null=True)),
                (
                    "co_operation_negotiations_description",
                    models.CharField(
                        max_length=256,
                        verbose_name="additional information about the ongoing co-operation negotiations",
                    ),
                ),
                ("apprenticeship_program", models.BooleanField(null=True)),
                ("archived", models.BooleanField()),
                (
                    "benefit_type",
                    models.CharField(
                        choices=[
                            ("employment_benefit", "Employment Benefit"),
                            ("salary_benefit", "Salary Benefit"),
                            ("commission_benefit", "Commission Benefit"),
                        ],
                        max_length=64,
                    ),
                ),
                (
                    "start_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="benefit start from date"
                    ),
                ),
                (
                    "end_date",
                    models.DateField(
                        blank=True, null=True, verbose_name="benefit end date"
                    ),
                ),
                ("de_minimis_aid", models.BooleanField(null=True)),
                ("history_id", models.AutoField(primary_key=True, serialize=False)),
                ("history_date", models.DateTimeField()),
                ("history_change_reason", models.CharField(max_length=100, null=True)),
                (
                    "history_type",
                    models.CharField(
                        choices=[("+", "Created"), ("~", "Changed"), ("-", "Deleted")],
                        max_length=1,
                    ),
                ),
                (
                    "company",
                    models.ForeignKey(
                        blank=True,
                        db_constraint=False,
                        null=True,
                        on_delete=django.db.models.deletion.DO_NOTHING,
                        related_name="+",
                        to="companies.company",
                        verbose_name="company",
                    ),
                ),
                (
                    "history_user",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="+",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "historical application",
                "db_table": "bf_applications_application_history",
                "ordering": ("-history_date", "-history_id"),
                "get_latest_by": "history_date",
            },
            bases=(simple_history.models.HistoricalChanges, models.Model),
        ),
        migrations.CreateModel(
            name="DeMinimisAid",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="time created"
                    ),
                ),
                (
                    "modified_at",
                    models.DateTimeField(auto_now=True, verbose_name="time modified"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "granter",
                    models.CharField(
                        max_length=64, verbose_name="granter of the de minimis aid"
                    ),
                ),
                (
                    "amount",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=8,
                        verbose_name="amount of the de minimis aid",
                    ),
                ),
                (
                    "granted_at",
                    models.DateField(
                        blank=True, null=True, verbose_name="benefit granted at"
                    ),
                ),
                (
                    "application",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="de_minimis_aid_set",
                        to="applications.application",
                        verbose_name="application",
                    ),
                ),
            ],
            options={
                "verbose_name": "de minimis aid",
                "verbose_name_plural": "de minimis aids",
                "db_table": "bf_applications_deminimisaid",
            },
        ),
        migrations.CreateModel(
            name="ApplicationLogEntry",
            fields=[
                (
                    "created_at",
                    models.DateTimeField(
                        auto_now_add=True, verbose_name="time created"
                    ),
                ),
                (
                    "modified_at",
                    models.DateTimeField(auto_now=True, verbose_name="time modified"),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "from_status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("received", "Received"),
                            (
                                "additional_information_needed",
                                "Additional information requested",
                            ),
                            ("cancelled", "Cancelled"),
                            ("accepted", "Accepted"),
                            ("rejected", "Rejected"),
                        ],
                        max_length=64,
                    ),
                ),
                (
                    "to_status",
                    models.CharField(
                        choices=[
                            ("draft", "Draft"),
                            ("received", "Received"),
                            (
                                "additional_information_needed",
                                "Additional information requested",
                            ),
                            ("cancelled", "Cancelled"),
                            ("accepted", "Accepted"),
                            ("rejected", "Rejected"),
                        ],
                        max_length=64,
                    ),
                ),
                ("comment", models.TextField(blank=True)),
                (
                    "application",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="log_entries",
                        to="applications.application",
                        verbose_name="application",
                    ),
                ),
            ],
            options={
                "verbose_name": "application log entry",
                "verbose_name_plural": "application log entries",
                "db_table": "bf_applications_applicationlogentry",
            },
        ),
        migrations.AddField(
            model_name="application",
            name="bases",
            field=models.ManyToManyField(
                related_name="applications", to="applications.ApplicationBasis"
            ),
        ),
        migrations.AddField(
            model_name="application",
            name="company",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                related_name="applications",
                to="companies.company",
                verbose_name="company",
            ),
        ),
    ]
